{"version":3,"sources":["webpack://@kyrne/evergreen/webpack/bootstrap","webpack://@kyrne/evergreen/external \"flarum.core.compat['app']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['extend']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/CommentPost']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/Button']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['utils/string']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['helpers/username']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['models/Post']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['Model']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/ReplyComposer']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/PostPreview']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['helpers/icon']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/Notification']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['utils/extract']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/Post']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['utils/extractText']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/LogInModal']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/NotificationGrid']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/Link']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['helpers/punctuateSeries']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/EditPostComposer']\"","webpack://@kyrne/evergreen/./node_modules/textarea-caret/index.js","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/ComposerBody']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/TextEditor']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/TextEditorButton']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['helpers/avatar']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['helpers/highlight']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['utils/KeyboardNavigatable']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['Component']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/UserPage']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/LinkButton']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/PostsUserPage']\"","webpack://@kyrne/evergreen/external \"flarum.core.compat['components/Alert']\"","webpack://@kyrne/evergreen/./src/forum/utils/reply.js","webpack://@kyrne/evergreen/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@kyrne/evergreen/./src/forum/components/PostQuoteButton.js","webpack://@kyrne/evergreen/./src/forum/addPostQuoteButton.js","webpack://@kyrne/evergreen/./src/forum/utils/selectedText.js","webpack://@kyrne/evergreen/./src/forum/components/AutocompleteDropdown.js","webpack://@kyrne/evergreen/./src/forum/addComposerAutocomplete.js","webpack://@kyrne/evergreen/./src/forum/components/PostMentionedNotification.js","webpack://@kyrne/evergreen/./src/forum/components/UserMentionedNotification.js","webpack://@kyrne/evergreen/./src/forum/components/MentionsUserPage.js","webpack://@kyrne/evergreen/./src/forum/utils/textFormatter.js","webpack://@kyrne/evergreen/./src/forum/index.js","webpack://@kyrne/evergreen/./src/forum/addPostMentionPreviews.js","webpack://@kyrne/evergreen/./src/forum/addMentionedByList.js","webpack://@kyrne/evergreen/./src/forum/addPostReplyAction.js","webpack://@kyrne/evergreen/./src/forum/MakeTree.js","webpack://@kyrne/evergreen/./forum.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","properties","isBrowser","window","isFirefox","mozInnerScreenX","getCaretCoordinates","element","position","options","Error","debug","el","document","querySelector","parentNode","removeChild","div","createElement","id","body","appendChild","style","computed","getComputedStyle","currentStyle","isInput","nodeName","whiteSpace","wordWrap","visibility","forEach","prop","lineHeight","height","scrollHeight","parseInt","overflowY","overflow","textContent","substring","replace","span","coordinates","top","offsetTop","left","offsetLeft","backgroundColor","insertMention","post","composer","quote","user","mention","username","number","fields","content","attrs","originalContent","cursorPosition","editor","getSelectionRange","preceding","slice","precedingNewlines","length","match","insertAtCursor","Array","join","trim","reply","app","bodyMatches","EditPostComposer","discussion","replyId","replyTo","DiscussionControls","replyAction","then","_inheritsLoose","subClass","superClass","constructor","__proto__","PostQuoteButton","view","_this","this","extract","className","icon","children","translator","trans","onclick","hide","onmousedown","e","stopPropagation","_Button","config","isInitialized","$","on","show","$this","parentOffset","offsetParent","offset","css","showStart","scrollTop","outerHeight","showEnd","right","bottom","outerWidth","Button","addPostQuoteButton","extend","CommentPost","original","isHidden","session","canReply","$postBody","$container","handler","setTimeout","selection","getSelection","rangeCount","range","getRangeAt","parent","commonAncestorContainer","contains","clone","append","cloneContents","find","replaceWith","alt","src","innerText","href","text","selectedText","button","render","rects","getClientRects","firstRect","clientY","clientX","lastRect","after","addEventListener","AutocompleteDropdown","init","active","index","keyWasJustPressed","items","map","item","navigate","delta","setIndex","clearTimeout","keyWasJustPressedTimeout","complete","eq","click","scrollToItem","$dropdown","$items","rangedIndex","$item","removeClass","addClass","dropdownScroll","dropdownTop","dropdownBottom","itemTop","itemBottom","stop","animate","Component","addComposerAutocomplete","ComposerBody","mentionStart","typed","searchTimeout","dropdown","$textarea","wrap","searched","navigator","KeyboardNavigatable","when","onUp","onDown","onSelect","onCancel","bindTo","indexOf","which","cursor","selectionStart","selectionEnd","substr","toLowerCase","makeSuggestion","replacement","usernameHelper","highlight","insert","setValue","setSelectionRange","applySuggestion","onmouseenter","avatar","userMatches","displayName","some","buildSuggestions","suggestions","store","all","push","composerPost","posts","filter","contentType","sort","a","b","createdAt","splice","truncate","contentPlain","width","typedLower","q","page","limit","TextEditor","_this2","add","TextEditorButton_default","PostMentionedNotification","notification","subject","route","replyNumber","fromUser","transChoice","excerpt","Notification","UserMentionedNotification","MentionsUserPage","loadResults","type","mentioned","loadLimit","PostsUserPage","filterUserMentions","tag","getBy","getAttribute","setAttribute","extractText","filterPostMentions","getById","initializers","Post","Model","attribute","replyCount","goToLast","forceRefresh","Promise","resolve","reject","composingReplyTo","load","ReplyComposer","viewingDiscussion","isFullScreen","current","goToNumber","modal","LogInModal","data","override","loading","redraw","createRecord","save","draft","delete","cache","trees","pushTree","stream","update","alert","viewButton","component","set","alerts","dismiss","controls","loaded","addPreviews","contentHtml","oldPostContentHtml","isEditing","parentPost","$parentPost","preventDefault","each","timeout","$preview","getPostElement","showPreview","$post","visible","pageYOffset","positionPreview","previewHeight","showPost","title","PostPreview","LoadingIndicator","off","hidePreview","hasClass","one","cancelable","hover","addPostMentionPreviews","mentionedBy","hasMany","replies","is","data-number","users","repliers","overLimit","names","Link_default","count","punctuateSeries","addMentionedByList","Button_default","toggleClass","vdom","thing","self","findIndex","include","has","response","payload","apply","notificationComponents","postMentioned","userMentioned","NotificationGrid","label","routes","path","UserPage","LinkButton","slug","getPlainContent","removeSelectors","__webpack_exports__"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/string'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['models/Post'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/ReplyComposer'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/PostPreview'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Notification'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/LogInModal'];","module.exports = flarum.core.compat['components/NotificationGrid'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Link'];","module.exports = flarum.core.compat['helpers/punctuateSeries'];","module.exports = flarum.core.compat['components/EditPostComposer'];","/* jshint browser: true */\n\n(function () {\n\n// We'll copy the properties below into the mirror div.\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nvar properties = [\n  'direction',  // RTL support\n  'boxSizing',\n  'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height',\n  'overflowX',\n  'overflowY',  // copy the scrollbar for IE\n\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderStyle',\n\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'fontStretch',\n  'fontSize',\n  'fontSizeAdjust',\n  'lineHeight',\n  'fontFamily',\n\n  'textAlign',\n  'textTransform',\n  'textIndent',\n  'textDecoration',  // might not make a difference, but better be safe\n\n  'letterSpacing',\n  'wordSpacing',\n\n  'tabSize',\n  'MozTabSize'\n\n];\n\nvar isBrowser = (typeof window !== 'undefined');\nvar isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\nfunction getCaretCoordinates(element, position, options) {\n  if (!isBrowser) {\n    throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n  }\n\n  var debug = options && options.debug || false;\n  if (debug) {\n    var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n    if (el) el.parentNode.removeChild(el);\n  }\n\n  // The mirror div will replicate the textarea's style\n  var div = document.createElement('div');\n  div.id = 'input-textarea-caret-position-mirror-div';\n  document.body.appendChild(div);\n\n  var style = div.style;\n  var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n  var isInput = element.nodeName === 'INPUT';\n\n  // Default textarea styles\n  style.whiteSpace = 'pre-wrap';\n  if (!isInput)\n    style.wordWrap = 'break-word';  // only for textarea-s\n\n  // Position off-screen\n  style.position = 'absolute';  // required to return coordinates properly\n  if (!debug)\n    style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n  // Transfer the element's properties to the div\n  properties.forEach(function (prop) {\n    if (isInput && prop === 'lineHeight') {\n      // Special case for <input>s because text is rendered centered and line height may be != height\n      style.lineHeight = computed.height;\n    } else {\n      style[prop] = computed[prop];\n    }\n  });\n\n  if (isFirefox) {\n    // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n    if (element.scrollHeight > parseInt(computed.height))\n      style.overflowY = 'scroll';\n  } else {\n    style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n  }\n\n  div.textContent = element.value.substring(0, position);\n  // The second special handling for input type=\"text\" vs textarea:\n  // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n  if (isInput)\n    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n  var span = document.createElement('span');\n  // Wrapping must be replicated *exactly*, including when a long word gets\n  // onto the next line, with whitespace at the end of the line before (#7).\n  // The  *only* reliable way to do that is to copy the *entire* rest of the\n  // textarea's content into the <span> created at the caret position.\n  // For inputs, just '.' would be enough, but no need to bother.\n  span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n  div.appendChild(span);\n\n  var coordinates = {\n    top: span.offsetTop + parseInt(computed['borderTopWidth']),\n    left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n    height: parseInt(computed['lineHeight'])\n  };\n\n  if (debug) {\n    span.style.backgroundColor = '#aaa';\n  } else {\n    document.body.removeChild(div);\n  }\n\n  return coordinates;\n}\n\nif (typeof module != 'undefined' && typeof module.exports != 'undefined') {\n  module.exports = getCaretCoordinates;\n} else if(isBrowser) {\n  window.getCaretCoordinates = getCaretCoordinates;\n}\n\n}());\n","module.exports = flarum.core.compat['components/ComposerBody'];","module.exports = flarum.core.compat['components/TextEditor'];","module.exports = flarum.core.compat['components/TextEditorButton'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['utils/KeyboardNavigatable'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['components/PostsUserPage'];","module.exports = flarum.core.compat['components/Alert'];","import DiscussionControls from 'flarum/utils/DiscussionControls';\nimport EditPostComposer from 'flarum/components/EditPostComposer';\n\nfunction insertMention(post, composer, quote) {\n  const user = post.user();\n  const mention = '@' + (user ? user.username() : post.number()) + '#' + post.id() + ' ';\n\n  // If the composer is empty, then assume we're starting a new reply.\n  // In which case we don't want the user to have to confirm if they\n  // close the composer straight away.\n  if (!composer.fields.content()) {\n    composer.body.attrs.originalContent = mention;\n  }\n\n  const cursorPosition = composer.editor.getSelectionRange()[0];\n  const preceding = composer.fields.content().slice(0, cursorPosition);\n  const precedingNewlines = preceding.length == 0 ? 0 : 3 - preceding.match(/(\\n{0,2})$/)[0].length;\n\n  composer.editor.insertAtCursor(\n    Array(precedingNewlines).join('\\n') + // Insert up to two newlines, depending on preceding whitespace\n    (quote\n      ? '> ' + mention + quote.trim().replace(/\\n/g, '\\n> ') + '\\n\\n'\n      : mention)\n  );\n}\n\nexport default function reply(post, quote) {\n  if (app.composer.bodyMatches(EditPostComposer) && app.composer.body.attrs.post.discussion() === post.discussion()) {\n    // If we're already editing a post in the discussion of post we're quoting,\n    // insert the mention directly.\n    insertMention(post, app.composer, quote);\n  } else {\n    // The default \"Reply\" action behavior will only open a new composer if\n    // necessary, but it will always be a ReplyComposer, hence the exceptional\n    // case above.\n    let replyId = post.id();\n    if (post.replyTo() > 0) {\n      replyId = post.replyTo()\n    }\n\n    DiscussionControls.replyAction.call(post.discussion(), false, false, replyId)\n      .then(composer => insertMention(post, composer, quote));\n  }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Button from 'flarum/components/Button';\nimport extract from 'flarum/utils/extract';\n\nimport reply from '../utils/reply';\n\nexport default class PostQuoteButton extends Button {\n  view() {\n    const post = extract(this.attrs, 'post');\n    const content = extract(this.attrs, 'content');\n\n    this.attrs.className = 'Button PostQuoteButton';\n    this.attrs.icon = 'fas fa-quote-left';\n    this.attrs.children = app.translator.trans('flarum-mentions.forum.post.quote_button');\n    this.attrs.onclick = () => {\n      this.hide();\n      reply(post, content);\n    };\n    this.attrs.onmousedown = (e) => e.stopPropagation();\n\n    return super.view();\n  }\n\n  config(isInitialized) {\n    if (isInitialized) return;\n\n    $(document).on('mousedown', this.hide.bind(this));\n  }\n\n  show(left, top) {\n    const $this = this.$().show();\n    const parentOffset = $this.offsetParent().offset();\n\n    $this\n      .css('left', left - parentOffset.left)\n      .css('top', top - parentOffset.top);\n  }\n\n  showStart(left, top) {\n    const $this = this.$();\n\n    this.show(left, $(window).scrollTop() + top - $this.outerHeight() - 5);\n  }\n\n  showEnd(right, bottom) {\n    const $this = this.$();\n\n    this.show(right - $this.outerWidth(), $(window).scrollTop() + bottom + 5);\n  }\n\n  hide() {\n    this.$().hide();\n  }\n}\n","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport PostQuoteButton from './components/PostQuoteButton';\nimport selectedText from './utils/selectedText';\n\nexport default function addPostQuoteButton() {\n  extend(CommentPost.prototype, 'config', function(original, isInitialized) {\n    const post = this.attrs.post;\n\n    if (isInitialized || post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    const $postBody = this.$('.Post-body');\n\n    // Wrap the quote button in a wrapper element so that we can render\n    // button into it.\n    const $container = $('<div class=\"Post-quoteButtonContainer\"></div>');\n\n    const handler = function(e) {\n      setTimeout(() => {\n        const content = selectedText($postBody);\n        if (content) {\n          const button = new PostQuoteButton({post, content});\n          m.render($container[0], button.render());\n\n          const rects = window.getSelection().getRangeAt(0).getClientRects();\n          const firstRect = rects[0];\n\n          if (e.clientY < firstRect.bottom && e.clientX - firstRect.right < firstRect.left - e.clientX) {\n            button.showStart(firstRect.left, firstRect.top);\n          } else {\n            const lastRect = rects[rects.length - 1];\n            button.showEnd(lastRect.right, lastRect.bottom);\n          }\n        }\n      }, 1);\n    };\n\n    this.$().after($container).on('mouseup', handler);\n\n    if ('ontouchstart' in window) {\n      document.addEventListener('selectionchange', handler, false);\n    }\n  });\n}\n","export default function selectedText(body) {\n  const selection = window.getSelection();\n  if (selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    const parent = range.commonAncestorContainer;\n    if (body[0] === parent || $.contains(body[0], parent)) {\n      const clone = $(\"<div>\").append(range.cloneContents());\n\n      // Replace emoji images with their shortcode (found in alt attribute)\n      clone.find('img.emoji').replaceWith(function() {\n        return this.alt;\n      });\n\n      // Replace all other images with a Markdown image\n      clone.find('img').replaceWith(function() {\n        return '![](' + this.src + ')';\n      });\n\n      // Replace all links with a Markdown link\n      clone.find('a').replaceWith(function() {\n        return '[' + this.innerText + '](' + this.href + ')';\n      });\n\n      return clone.text();\n    }\n  }\n  return \"\";\n}\n","import Component from 'flarum/Component';\n\nexport default class AutocompleteDropdown extends Component {\n  init() {\n    this.active = false;\n    this.index = 0;\n    this.keyWasJustPressed = false;\n  }\n\n  view() {\n    return (\n      <ul className=\"Dropdown-menu MentionsDropdown\">\n        {this.attrs.items.map(item => <li>{item}</li>)}\n      </ul>\n    );\n  }\n\n  show(left, top) {\n    this.$().show().css({\n      left: left + 'px',\n      top: top + 'px'\n    });\n    this.active = true;\n  }\n\n  hide() {\n    this.$().hide();\n    this.active = false;\n  }\n\n  navigate(delta) {\n    this.keyWasJustPressed = true;\n    this.setIndex(this.index + delta, true);\n    clearTimeout(this.keyWasJustPressedTimeout);\n    this.keyWasJustPressedTimeout = setTimeout(() => this.keyWasJustPressed = false, 500);\n  }\n\n  complete() {\n    this.$('li').eq(this.index).find('button').click();\n  }\n\n  setIndex(index, scrollToItem) {\n    if (this.keyWasJustPressed && !scrollToItem) return;\n\n    const $dropdown = this.$();\n    const $items = $dropdown.find('li');\n    let rangedIndex = index;\n\n    if (rangedIndex < 0) {\n      rangedIndex = $items.length - 1;\n    } else if (rangedIndex >= $items.length) {\n      rangedIndex = 0;\n    }\n\n    this.index = rangedIndex;\n\n    const $item = $items.removeClass('active').eq(rangedIndex).addClass('active');\n\n    if (scrollToItem) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({scrollTop}, 100);\n      }\n    }\n  }\n}\n","import getCaretCoordinates from 'textarea-caret';\n\nimport { extend } from 'flarum/extend';\nimport ComposerBody from 'flarum/components/ComposerBody';\nimport TextEditor from 'flarum/components/TextEditor';\nimport TextEditorButton from 'flarum/components/TextEditorButton';\nimport avatar from 'flarum/helpers/avatar';\nimport usernameHelper from 'flarum/helpers/username';\nimport highlight from 'flarum/helpers/highlight';\nimport KeyboardNavigatable from 'flarum/utils/KeyboardNavigatable';\nimport { truncate } from 'flarum/utils/string';\n\nimport AutocompleteDropdown from './components/AutocompleteDropdown';\n\nexport default function addComposerAutocomplete() {\n  extend(ComposerBody.prototype, 'config', function(original, isInitialized) {\n    if (isInitialized) return;\n\n    const composer = this;\n    const $container = $('<div class=\"ComposerBody-mentionsDropdownContainer\"></div>');\n    const dropdown = new AutocompleteDropdown({items: []});\n    const $textarea = this.$('textarea').wrap('<div class=\"ComposerBody-mentionsWrapper\"></div>');\n    const searched = [];\n    let mentionStart;\n    let typed;\n    let searchTimeout;\n\n    const applySuggestion = function(replacement) {\n      const insert = replacement + ' ';\n\n      // When calling setValue(), mentionStart will be set back to 0 so we need to compute this beforehand\n      const index = mentionStart - 1 + insert.length;\n\n      const content = composer.content();\n      composer.editor.setValue(content.substring(0, mentionStart - 1) + insert + content.substr($textarea[0].selectionStart));\n\n      composer.editor.setSelectionRange(index, index);\n\n      dropdown.hide();\n    };\n\n    this.navigator = new KeyboardNavigatable();\n    this.navigator\n      .when(() => dropdown.active)\n      .onUp(() => dropdown.navigate(-1))\n      .onDown(() => dropdown.navigate(1))\n      .onSelect(dropdown.complete.bind(dropdown))\n      .onCancel(dropdown.hide.bind(dropdown))\n      .bindTo($textarea);\n\n    $textarea\n      .after($container)\n      .on('click keyup input', function(e) {\n        // Up, down, enter, tab, escape, left, right.\n        if ([9, 13, 27, 40, 38, 37, 39].indexOf(e.which) !== -1) return;\n\n        const cursor = this.selectionStart;\n\n        if (this.selectionEnd - cursor > 0) return;\n\n        // Search backwards from the cursor for an '@' symbol. If we find one,\n        // we will want to show the autocomplete dropdown!\n        const value = this.value;\n        mentionStart = 0;\n        for (let i = cursor - 1; i >= cursor - 30; i--) {\n          const character = value.substr(i, 1);\n          if (character === '@') {\n            mentionStart = i + 1;\n            break;\n          }\n        }\n\n        dropdown.hide();\n        dropdown.active = false;\n\n        if (mentionStart) {\n          typed = value.substring(mentionStart, cursor).toLowerCase();\n\n          const makeSuggestion = function(user, replacement, content, className = '') {\n            const username = usernameHelper(user);\n            if (typed) {\n              username.children[0] = highlight(username.children[0], typed);\n            }\n\n            return (\n              <button className={'PostPreview ' + className}\n                onclick={() => applySuggestion(replacement)}\n                onmouseenter={function() {\n                  dropdown.setIndex($(this).parent().index());\n                }}>\n                <span className=\"PostPreview-content\">\n                  {avatar(user)}\n                  {username} {' '}\n                  {content}\n                </span>\n              </button>\n            );\n          };\n\n          const userMatches = function(user) {\n            const names = [\n              user.username(),\n              user.displayName()\n            ];\n\n            return names.some(value => value.toLowerCase().substr(0, typed.length) === typed);\n          };\n\n          const buildSuggestions = () => {\n            const suggestions = [];\n\n            // If the user has started to type a username, then suggest users\n            // matching that username.\n            if (typed) {\n              app.store.all('users').forEach(user => {\n                if (!userMatches(user)) return;\n\n                suggestions.push(\n                  makeSuggestion(user, '@' + user.username(), '', 'MentionsDropdown-user')\n                );\n              });\n            }\n\n            // If the user is replying to a discussion, or if they are editing a\n            // post, then we can suggest other posts in the discussion to mention.\n            // We will add the 5 most recent comments in the discussion which\n            // match any username characters that have been typed.\n            const composerPost = composer.attrs.post;\n            const discussion = (composerPost && composerPost.discussion()) || composer.attrs.discussion;\n            if (discussion) {\n              discussion.posts()\n                .filter(post => post && post.contentType() === 'comment' && (!composerPost || post.number() < composerPost.number()))\n                .sort((a, b) => b.createdAt() - a.createdAt())\n                .filter(post => {\n                  const user = post.user();\n                  return user && userMatches(user);\n                })\n                .splice(0, 5)\n                .forEach(post => {\n                  const user = post.user();\n                  suggestions.push(\n                    makeSuggestion(user, '@' + user.username() + '#' + post.id(), [\n                      app.translator.trans('flarum-mentions.forum.composer.reply_to_post_text', {number: post.number()}), ' — ',\n                      truncate(post.contentPlain(), 200)\n                    ], 'MentionsDropdown-post')\n                  );\n                });\n            }\n\n            if (suggestions.length) {\n              dropdown.attrs.items = suggestions;\n              m.render($container[0], dropdown.render());\n\n              dropdown.show();\n              const coordinates = getCaretCoordinates(this, mentionStart);\n              const width = dropdown.$().outerWidth();\n              const height = dropdown.$().outerHeight();\n              const parent = dropdown.$().offsetParent();\n              let left = coordinates.left;\n              let top = coordinates.top - this.scrollTop + 15;\n              if (top + height > parent.height()) {\n                top = coordinates.top - this.scrollTop - height - 15;\n              }\n              if (left + width > parent.width()) {\n                left = parent.width() - width;\n              }\n              dropdown.show(left, top);\n            } else {\n              dropdown.active = false;\n              dropdown.hide();\n            }\n          };\n\n          dropdown.active = true;\n\n          buildSuggestions();\n\n          dropdown.setIndex(0);\n          dropdown.$().scrollTop(0);\n\n          clearTimeout(searchTimeout);\n          if (typed) {\n            searchTimeout = setTimeout(function() {\n              const typedLower = typed.toLowerCase();\n              if (searched.indexOf(typedLower) === -1) {\n                app.store.find('users', {filter: {q: typed}, page: {limit: 5}}).then(() => {\n                  if (dropdown.active) buildSuggestions();\n                });\n                searched.push(typedLower);\n              }\n            }, 250);\n          }\n        }\n      });\n  });\n\n  extend(TextEditor.prototype, 'toolbarItems', function(items) {\n    items.add('mention', (\n      <TextEditorButton onclick={() => this.insertAtCursor('@')} icon=\"fas fa-at\">\n        {app.translator.trans('flarum-mentions.forum.composer.mention_tooltip')}\n      </TextEditorButton>\n    ));\n  });\n}\n","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class PostMentionedNotification extends Notification {\n  icon() {\n    return 'fas fa-reply';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const post = notification.subject();\n    const content = notification.content();\n\n    return app.route.discussion(post.discussion(), content && content.replyNumber);\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    const user = notification.fromUser();\n\n    return app.translator.transChoice('flarum-mentions.forum.notifications.post_mentioned_text', 1, {user});\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class UserMentionedNotification extends Notification {\n  icon() {\n    return 'fas fa-at';\n  }\n\n  href() {\n    const post = this.attrs.notification.subject();\n\n    return app.route.discussion(post.discussion(), post.number());\n  }\n\n  content() {\n    const user = this.attrs.notification.fromUser();\n\n    return app.translator.trans('flarum-mentions.forum.notifications.user_mentioned_text', {user});\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import PostsUserPage from 'flarum/components/PostsUserPage';\n\n/**\n * The `MentionsUserPage` component shows post which user Mentioned at\n */\nexport default class MentionsUserPage extends PostsUserPage {\n  /**\n   * Load a new page of the user's activity feed.\n   *\n   * @param {Integer} [offset] The position to start getting results from.\n   * @return {Promise}\n   * @protected\n   */\n  loadResults(offset) {\n    return app.store.find('posts', {\n      filter: {\n        type: 'comment',\n        mentioned: this.user.id()\n      },\n      page: {offset, limit: this.loadLimit},\n      sort: '-createdAt'\n    });\n  }\n}\n","import username from 'flarum/helpers/username';\nimport extractText from 'flarum/utils/extractText';\n\nexport function filterUserMentions(tag) {\n  const user = app.store.getBy('users', 'username', tag.getAttribute('username'));\n\n  if (user) {\n    tag.setAttribute('id', user.id());\n    tag.setAttribute('displayname', extractText(username(user)));\n\n    return true;\n  }\n}\n\nexport function filterPostMentions(tag) {\n  const post = app.store.getById('posts', tag.getAttribute('id'));\n\n  if (post) {\n    tag.setAttribute('discussionid', post.discussion().id());\n    tag.setAttribute('number', post.number());\n    tag.setAttribute('displayname', extractText(username(post.user())));\n\n    return true;\n  }\n}\n","import app from 'flarum/app';\nimport {extend, override} from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport Alert from 'flarum/components/Alert';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport Post from 'flarum/models/Post';\nimport Model from 'flarum/Model';\nimport ReplyComposer from \"flarum/components/ReplyComposer\";\nimport LogInModal from \"flarum/components/LogInModal\";\n\nimport NotificationGrid from 'flarum/components/NotificationGrid';\nimport { getPlainContent } from 'flarum/utils/string';\n\nimport addPostMentionPreviews from './addPostMentionPreviews';\nimport addMentionedByList from './addMentionedByList';\nimport addPostReplyAction from './addPostReplyAction';\nimport addPostQuoteButton from './addPostQuoteButton';\nimport addComposerAutocomplete from './addComposerAutocomplete';\nimport PostMentionedNotification from './components/PostMentionedNotification';\nimport UserMentionedNotification from './components/UserMentionedNotification';\nimport UserPage from 'flarum/components/UserPage'\nimport LinkButton from 'flarum/components/LinkButton';\nimport MentionsUserPage from './components/MentionsUserPage';\n\nimport MakeTree from './MakeTree';\n\napp.initializers.add('kyrne-everygreen', () => {\n  Post.prototype.replyTo = Model.attribute('replyTo');\n  Post.prototype.replyCount = Model.attribute('replyCount');\n\n  DiscussionControls.replyAction = function (goToLast, forceRefresh, replyTo) {\n    return new Promise((resolve, reject) => {\n      if (app.session.user) {\n        if (this.canReply()) {\n          if (!app.composer.composingReplyTo(this) || forceRefresh) {\n            app.composer.load(ReplyComposer, {\n              user: app.session.user,\n              discussion: this,\n              replyTo\n            });\n          }\n          app.composer.show();\n\n          if (goToLast && app.viewingDiscussion(this) && !app.composer.isFullScreen()) {\n            app.current.get('stream').goToNumber('reply');\n          }\n\n          return resolve(app.composer);\n        } else {\n          return reject();\n        }\n      }\n\n      app.modal.show(LogInModal);\n\n      return reject();\n    });\n  };\n\n  extend(ReplyComposer.prototype, 'oninit', function() {\n    this.replyTo = this.attrs.replyTo;\n  });\n\n  extend(ReplyComposer.prototype, 'data', function(data) {\n    data.replyTo = this.replyTo\n  });\n\n  override(ReplyComposer.prototype, 'onsubmit', function() {\n    const discussion = this.attrs.discussion;\n\n    this.loading = true;\n    m.redraw();\n\n    const data = this.data();\n\n    app.store\n      .createRecord('posts')\n      .save(data)\n      .then((post) => {\n\n        if (this.draft) {\n          this.draft.delete();\n        }\n        // If we're currently viewing the discussion which this reply was made\n        // in, then we can update the post stream and scroll to the post.\n        if (app.viewingDiscussion(discussion)) {\n          if (this.attrs.replyTo) {\n            app.cache.trees[this.attrs.replyTo].push(post);\n            app.cache.pushTree[this.attrs.replyTo]++;\n            m.redraw();\n          } else {\n            const stream = app.current.get('stream');\n            stream.update().then(() => stream.goToNumber(post.number()));\n          }\n        } else {\n          // Otherwise, we'll create an alert message to inform the user that\n          // their reply has been posted, containing a button which will\n          // transition to their new post when clicked.\n          let alert;\n          const viewButton = Button.component(\n            {\n              className: 'Button Button--link',\n              onclick: () => {\n                m.route.set(app.route.post(post));\n                app.alerts.dismiss(alert);\n              },\n            },\n            app.translator.trans('core.forum.composer_reply.view_button')\n          );\n          alert = app.alerts.show(\n            {\n              type: 'success',\n              controls: [viewButton],\n            },\n            app.translator.trans('core.forum.composer_reply.posted_message')\n          );\n        }\n\n\n        app.composer.hide();\n      }, this.loaded.bind(this));\n  });\n\n  // For every mention of a post inside a post's content, set up a hover handler\n  // that shows a preview of the mentioned post.\n  addPostMentionPreviews();\n\n  // In the footer of each post, show information about who has replied (i.e.\n  // who the post has been mentioned by).\n  addMentionedByList();\n\n  // Add a 'reply' control to the footer of each post. When clicked, it will\n  // open up the composer and add a post mention to its contents.\n  addPostReplyAction();\n\n  // Show a Quote button when Post text is selected\n  addPostQuoteButton();\n\n  // After typing '@' in the composer, show a dropdown suggesting a bunch of\n  // posts or users that the user could mention.\n  addComposerAutocomplete();\n\n  MakeTree();\n\n  app.notificationComponents.postMentioned = PostMentionedNotification;\n  app.notificationComponents.userMentioned = UserMentionedNotification;\n\n  // Add notification preferences.\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n    items.add('postMentioned', {\n      name: 'postMentioned',\n      icon: 'fas fa-reply',\n      label: app.translator.trans('flarum-mentions.forum.settings.notify_post_mentioned_label')\n    });\n\n    items.add('userMentioned', {\n      name: 'userMentioned',\n      icon: 'fas fa-at',\n      label: app.translator.trans('flarum-mentions.forum.settings.notify_user_mentioned_label')\n    });\n  });\n\n  // Add mentions tab in user profile\n  app.routes['user.mentions'] = {path: '/u/:username/mentions', component: MentionsUserPage};\n  extend(UserPage.prototype, 'navItems', function(items) {\n    const user = this.user;\n    items.add('mentions',\n      LinkButton.component({\n        href: app.route('user.mentions', {username: user.slug()}),\n        name: 'mentions',\n        icon: 'fas fa-at'\n      }, app.translator.trans('flarum-mentions.forum.user.mentions_link')),\n      80\n    );\n  });\n\n  // Remove post mentions when rendering post previews.\n  getPlainContent.removeSelectors.push('a.PostMention');\n});\n\nexport * from './utils/textFormatter';\n","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport PostPreview from 'flarum/components/PostPreview';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\n\nexport default function addPostMentionPreviews() {\n  function addPreviews() {\n    const contentHtml = this.attrs.post.contentHtml();\n\n    if (contentHtml === this.oldPostContentHtml || this.isEditing()) return;\n\n    this.oldPostContentHtml = contentHtml;\n\n    const parentPost = this.attrs.post;\n    const $parentPost = this.$();\n\n    this.$().on('click', '.UserMention:not(.UserMention--deleted), .PostMention:not(.PostMention--deleted)', function (e) {\n      m.route.set(this.getAttribute('href'));\n      e.preventDefault();\n    });\n\n    this.$('.PostMention:not(.PostMention--deleted)').each(function() {\n      const $this = $(this);\n      const id = $this.data('id');\n      let timeout;\n\n      // Wrap the mention link in a wrapper element so that we can insert a\n      // preview popup as its sibling and relatively position it.\n      const $preview = $('<ul class=\"Dropdown-menu PostMention-preview fade\"/>');\n      $parentPost.append($preview);\n\n      const getPostElement = () => {\n        return $(`.PostStream-item[data-id=\"${id}\"]`);\n      };\n\n      const showPreview = () => {\n        // When the user hovers their mouse over the mention, look for the\n        // post that it's referring to in the stream, and determine if it's\n        // in the viewport. If it is, we will \"pulsate\" it.\n        const $post = getPostElement();\n        let visible = false;\n        if ($post.length) {\n          const top = $post.offset().top;\n          const scrollTop = window.pageYOffset;\n          if (top > scrollTop && top + $post.height() < scrollTop + $(window).height()) {\n            $post.addClass('pulsate');\n            visible = true;\n          }\n        }\n\n        // Otherwise, we will show a popup preview of the post. If the post\n        // hasn't yet been loaded, we will need to do that.\n        if (!visible) {\n          // Position the preview so that it appears above the mention.\n          // (The offsetParent should be .Post-body.)\n          const positionPreview = () => {\n            const previewHeight = $preview.outerHeight(true);\n            let offset = 0;\n\n            // If the preview goes off the top of the viewport, reposition it to\n            // be below the mention.\n            if ($this.offset().top - previewHeight < $(window).scrollTop() + $('#header').outerHeight()) {\n              offset += $this.outerHeight(true);\n            } else {\n              offset -= previewHeight;\n            }\n\n            $preview.show()\n              .css('top', $this.offset().top - $parentPost.offset().top + offset)\n              .css('left', $this.offsetParent().offset().left - $parentPost.offset().left)\n              .css('max-width', $this.offsetParent().width());\n          };\n\n          const showPost = post => {\n            const discussion = post.discussion();\n\n            m.render($preview[0], [\n              discussion !== parentPost.discussion()\n                ? <li><span className=\"PostMention-preview-discussion\">{discussion.title()}</span></li>\n                : '',\n              <li>{PostPreview.component({post})}</li>\n            ]);\n            positionPreview();\n          };\n\n          const post = app.store.getById('posts', id);\n          if (post && post.discussion()) {\n            showPost(post);\n          } else {\n            m.render($preview[0], LoadingIndicator.component());\n            app.store.find('posts', id).then(showPost);\n            positionPreview();\n          }\n\n          setTimeout(() => $preview.off('transitionend').addClass('in'));\n        }\n      };\n\n      const hidePreview = () => {\n        getPostElement().removeClass('pulsate');\n        if ($preview.hasClass('in')) {\n          $preview.removeClass('in').one('transitionend', () => $preview.hide());\n        }\n      };\n\n      // On a touch (mobile) device we cannot hover the link to reveal the preview.\n      // Instead we cancel the navigation so that a click reveals the preview.\n      // Users can then click on the preview to go to the post if desired.\n      $this.on('touchend', e => {\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n      });\n\n      $this.add($preview).hover(\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(showPreview, 250);\n        },\n        () => {\n          clearTimeout(timeout);\n          getPostElement().removeClass('pulsate');\n          timeout = setTimeout(hidePreview, 250);\n        }\n      )\n        .on('touchend', e => {\n          showPreview();\n          e.stopPropagation();\n        });\n\n      $(document).on('touchend', hidePreview);\n    });\n  }\n\n  extend(CommentPost.prototype, 'oncreate', addPreviews);\n  extend(CommentPost.prototype, 'onupdate', addPreviews);\n}\n","import { extend } from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport Post from 'flarum/models/Post';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Link from 'flarum/components/Link';\nimport PostPreview from 'flarum/components/PostPreview';\nimport punctuateSeries from 'flarum/helpers/punctuateSeries';\nimport username from 'flarum/helpers/username';\nimport icon from 'flarum/helpers/icon';\n\nexport default function addMentionedByList() {\n  Post.prototype.mentionedBy = Model.hasMany('mentionedBy');\n\n  function hidePreview() {\n    this.$('.Post-mentionedBy-preview')\n      .removeClass('in')\n      .one('transitionend', function() { $(this).hide(); });\n  }\n\n  extend(CommentPost.prototype, 'oncreate', function() {\n    let timeout;\n    const post = this.attrs.post;\n    const replies = post.mentionedBy();\n\n    if (replies && replies.length) {\n      const $preview = $('<ul class=\"Dropdown-menu Post-mentionedBy-preview fade\"/>');\n      this.$().append($preview);\n\n      const $parentPost = this.$();\n      const $this = this.$('.Post-mentionedBy');\n\n      const showPreview = () => {\n        if (!$preview.hasClass('in') && $preview.is(':visible')) return;\n\n        // When the user hovers their mouse over the list of people who have\n        // replied to the post, render a list of reply previews into a\n        // popup.\n        m.render($preview[0], replies.map(reply => (\n          <li data-number={reply.number()}>\n            {PostPreview.component({\n              post: reply,\n              onclick: hidePreview.bind(this)\n            })}\n          </li>\n        )));\n\n        $preview.show()\n          .css('top', $this.offset().top - $parentPost.offset().top + $this.outerHeight(true))\n          .css('left', $this.offsetParent().offset().left - $parentPost.offset().left)\n          .css('max-width', $parentPost.width());\n\n        setTimeout(() => $preview.off('transitionend').addClass('in'));\n      }\n\n      $this.add($preview).hover(\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(showPreview, 250);\n        },\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(hidePreview, 250);\n        }\n      );\n\n      // Whenever the user hovers their mouse over a particular name in the\n      // list of repliers, highlight the corresponding post in the preview\n      // popup.\n      this.$().find('.Post-mentionedBy-summary a').hover(function() {\n        $preview.find('[data-number=\"' + $(this).data('number') + '\"]').addClass('active');\n      }, function() {\n        $preview.find('[data-number]').removeClass('active');\n      });\n    }\n  });\n\n  extend(CommentPost.prototype, 'footerItems', function(items) {\n    const post = this.attrs.post;\n    const replies = post.mentionedBy();\n\n    if (replies && replies.length) {\n      const users = [];\n      const repliers = replies\n        .sort(reply => reply.user() === app.session.user ? -1 : 0)\n        .filter(reply => {\n          const user = reply.user();\n          if (users.indexOf(user) === -1) {\n            users.push(user);\n            return true;\n          }\n        });\n\n      const limit = 4;\n      const overLimit = repliers.length > limit;\n\n      // Create a list of unique users who have replied. So even if a user has\n      // replied twice, they will only be in this array once.\n      const names = repliers\n        .slice(0, overLimit ? limit - 1 : limit)\n        .map(reply => {\n          const user = reply.user();\n\n          return (\n            <Link href={app.route.post(reply)}\n                  onclick={hidePreview.bind(this)}\n                  data-number={reply.number()}>\n              {app.session.user === user ? app.translator.trans('flarum-mentions.forum.post.you_text') : username(user)}\n            </Link>\n          );\n        });\n\n      // If there are more users that we've run out of room to display, add a \"x\n      // others\" name to the end of the list. Clicking on it will display a modal\n      // with a full list of names.\n      if (overLimit) {\n        const count = repliers.length - names.length;\n\n        names.push(\n          app.translator.trans('flarum-mentions.forum.post.others_text', {count})\n        );\n      }\n\n      items.add('replies',\n        <div className=\"Post-mentionedBy\">\n          <span className=\"Post-mentionedBy-summary\">\n            {icon('fas fa-reply')}\n            {app.translator.trans('flarum-mentions.forum.post.mentioned_by' + (repliers[0].user() === app.session.user ? '_self' : '') + '_text', {\n              count: names.length,\n              users: punctuateSeries(names)\n            })}\n          </span>\n        </div>\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/extend';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport reply from './utils/reply';\n\nexport default function () {\n  extend(CommentPost.prototype, 'actionItems', function (items) {\n\n    const post = this.attrs.post;\n\n    if (post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    items.add('reply',\n      <Button className='Button Button--link' onclick={() => reply(post)}>\n        {app.translator.trans('flarum-mentions.forum.post.reply_link')}\n      </Button>\n    );\n  });\n}\n","import {extend, override} from 'flarum/extend';\nimport Post from 'flarum/components/Post';\nimport Button from 'flarum/components/Button';\nimport icon from 'flarum/helpers/icon';\nimport CommentPost from 'flarum/components/CommentPost';\n\nexport default function MakeTree() {\n  override(Post.prototype, 'config', function() {\n    const $actions = this.$('.Post-actions');\n    const $controls = this.$('.Post-controls');\n\n    $controls.on('click tap', function() {\n      $(this).toggleClass('open');\n    });\n  });\n\n\n  extend(Post.prototype, 'view', function (vdom) {\n    const id = this.attrs.post.id();\n    if (!app.cache.trees) {\n      app.cache.trees = {};\n      app.cache.pushTree = {};\n    }\n    if (!app.cache.trees[id]) {\n      app.cache.trees[id] = [];\n      app.cache.pushTree[id] = 0;\n    }\n\n    if (app.cache.trees[id].length > 0) {\n      vdom.children.push(\n        <div className='CommentTree' id={id}>\n          {icon('fas fa-reply')}\n          {app.cache.trees[id].filter((thing, index, self) => self.findIndex(t => t.id() === thing.id()) === index)\n            .sort((a, b) => {\n              return a.createdAt() - b.createdAt();\n            }).map(post => {\n              return CommentPost.component({post});\n            })}\n        </div>\n      )\n    }\n    if (this.attrs.post.replyCount() > app.cache.trees[id].length - app.cache.pushTree[id] || (app.cache.trees[id].length === 0 && this.attrs.post.replyCount())) {\n      const count = this.attrs.post.replyCount() - app.cache.trees[id].length + app.cache.pushTree[id];\n      let include = 'discussion,user,user.groups,hiddenUser,editedUser,';\n      if (app.initializers.has('fof-gamification')) {\n        include += 'user.ranks,upvotes,';\n      }\n      if (app.initializers.has('fof/reactions')) {\n        include += 'reactions';\n      }\n      vdom.children.push(\n        Button.component({\n          className: 'Button Button--link Evergreen--show',\n          icon: 'fas fa-caret-down',\n          onclick: () => {\n            app.store.find('trees', id, {include: include.replace(/,\\s*$/, \"\")})\n              .then(response => {\n                delete response.payload;\n                [].push.apply(app.cache.trees[id], response);\n                m.redraw();\n              })\n          }\n        }, app.translator.trans('kyrne-evergreen.forum.post.show_' + (count > 1 ? 'replies' : 'reply'), {count}))\n      );\n    }\n  })\n}\n\n","export * from './src/forum';\n"],"sourceRoot":""}