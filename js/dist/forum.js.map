{"version":3,"sources":["webpack://@reflar/doorman/webpack/bootstrap","webpack://@reflar/doorman/external \"flarum.core.compat['app']\"","webpack://@reflar/doorman/external \"flarum.core.compat['extend']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/CommentPost']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Button']\"","webpack://@reflar/doorman/external \"flarum.core.compat['utils/string']\"","webpack://@reflar/doorman/external \"flarum.core.compat['helpers/username']\"","webpack://@reflar/doorman/external \"flarum.core.compat['models/Post']\"","webpack://@reflar/doorman/external \"flarum.core.compat['Model']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/ReplyComposer']\"","webpack://@reflar/doorman/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/PostPreview']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Notification']\"","webpack://@reflar/doorman/external \"flarum.core.compat['utils/extract']\"","webpack://@reflar/doorman/external \"flarum.core.compat['utils/extractText']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Alert']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/LogInModal']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/NotificationGrid']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@reflar/doorman/external \"flarum.core.compat['helpers/punctuateSeries']\"","webpack://@reflar/doorman/external \"flarum.core.compat['helpers/icon']\"","webpack://@reflar/doorman/./node_modules/textarea-caret/index.js","webpack://@reflar/doorman/external \"flarum.core.compat['components/ComposerBody']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/TextEditor']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/TextEditorButton']\"","webpack://@reflar/doorman/external \"flarum.core.compat['helpers/avatar']\"","webpack://@reflar/doorman/external \"flarum.core.compat['helpers/highlight']\"","webpack://@reflar/doorman/external \"flarum.core.compat['utils/KeyboardNavigatable']\"","webpack://@reflar/doorman/external \"flarum.core.compat['Component']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/UserPage']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/LinkButton']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/PostsUserPage']\"","webpack://@reflar/doorman/external \"flarum.core.compat['components/Post']\"","webpack://@reflar/doorman/./src/forum/utils/reply.js","webpack://@reflar/doorman/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@reflar/doorman/./src/forum/components/PostQuoteButton.js","webpack://@reflar/doorman/./src/forum/addPostQuoteButton.js","webpack://@reflar/doorman/./src/forum/utils/selectedText.js","webpack://@reflar/doorman/./src/forum/components/AutocompleteDropdown.js","webpack://@reflar/doorman/./src/forum/addComposerAutocomplete.js","webpack://@reflar/doorman/./src/forum/components/PostMentionedNotification.js","webpack://@reflar/doorman/./src/forum/components/UserMentionedNotification.js","webpack://@reflar/doorman/./src/forum/components/MentionsUserPage.js","webpack://@reflar/doorman/./src/forum/utils/textFormatter.js","webpack://@reflar/doorman/./src/forum/index.js","webpack://@reflar/doorman/./src/forum/addPostMentionPreviews.js","webpack://@reflar/doorman/./src/forum/addMentionedByList.js","webpack://@reflar/doorman/./src/forum/addPostReplyAction.js","webpack://@reflar/doorman/./src/forum/MakeTree.js","webpack://@reflar/doorman/./forum.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","properties","isBrowser","window","isFirefox","mozInnerScreenX","getCaretCoordinates","element","position","options","Error","debug","el","document","querySelector","parentNode","removeChild","div","createElement","id","body","appendChild","style","computed","getComputedStyle","currentStyle","isInput","nodeName","whiteSpace","wordWrap","visibility","forEach","prop","lineHeight","height","scrollHeight","parseInt","overflowY","overflow","textContent","substring","replace","span","coordinates","top","offsetTop","left","offsetLeft","backgroundColor","insertMention","post","component","quote","user","mention","username","number","content","props","originalContent","cursorPosition","editor","getSelectionRange","preceding","slice","precedingNewlines","length","match","insertAtCursor","Array","join","trim","reply","app","composer","discussion","replyId","replyTo","DiscussionControls","replyAction","then","newComponent","_inheritsLoose","subClass","superClass","constructor","__proto__","PostQuoteButton","view","_this","this","extract","className","icon","children","translator","trans","onclick","hide","onmousedown","e","stopPropagation","_Button","config","isInitialized","$","on","show","$this","parentOffset","offsetParent","offset","css","showStart","scrollTop","outerHeight","showEnd","right","bottom","outerWidth","Button","addPostQuoteButton","extend","CommentPost","original","isHidden","session","canReply","$postBody","$container","handler","setTimeout","selection","getSelection","rangeCount","range","getRangeAt","parent","commonAncestorContainer","contains","clone","append","cloneContents","find","replaceWith","alt","src","innerText","href","text","selectedText","button","render","rects","getClientRects","firstRect","clientY","clientX","lastRect","after","addEventListener","AutocompleteDropdown","init","active","index","keyWasJustPressed","items","map","item","navigate","delta","setIndex","clearTimeout","keyWasJustPressedTimeout","complete","eq","click","scrollToItem","$dropdown","$items","rangedIndex","$item","removeClass","addClass","dropdownScroll","dropdownTop","dropdownBottom","itemTop","itemBottom","stop","animate","Component","addComposerAutocomplete","ComposerBody","mentionStart","typed","searchTimeout","dropdown","$textarea","wrap","searched","navigator","KeyboardNavigatable","when","onUp","onDown","onSelect","onCancel","bindTo","indexOf","which","cursor","selectionStart","selectionEnd","substr","toLowerCase","makeSuggestion","replacement","usernameHelper","highlight","insert","setValue","setSelectionRange","applySuggestion","onmouseenter","avatar","userMatches","displayName","some","buildSuggestions","suggestions","store","all","push","composerPost","posts","filter","contentType","sort","a","b","createdAt","splice","truncate","contentPlain","width","typedLower","q","page","limit","TextEditor","_this2","add","TextEditorButton_default","PostMentionedNotification","notification","subject","route","replyNumber","fromUser","transChoice","excerpt","Notification","UserMentionedNotification","MentionsUserPage","loadResults","type","mentioned","loadLimit","PostsUserPage","filterUserMentions","tag","getBy","getAttribute","setAttribute","extractText","filterPostMentions","getById","initializers","Post","Model","attribute","replyCount","goToLast","forceRefresh","deferred","composingReplyTo","ReplyComposer","load","viewingDiscussion","isFullScreen","current","stream","goToNumber","resolve","reject","modal","LogInModal","promise","data","override","loading","redraw","createRecord","save","cache","trees","pushTree","update","alert","viewButton","alerts","dismiss","Alert","controls","loaded","contentHtml","oldPostContentHtml","isEditing","parentPost","$parentPost","each","attrs","timeout","$preview","getPostElement","showPreview","$post","visible","pageYOffset","positionPreview","previewHeight","showPost","title","PostPreview","LoadingIndicator","off","hidePreview","hasClass","one","preventDefault","hover","mentionedBy","hasMany","replies","users","repliers","overLimit","names","data-number","count","is","punctuateSeries","vdom","thing","self","findIndex","response","payload","apply","notificationComponents","postMentioned","userMentioned","NotificationGrid","label","routes","path","UserPage","LinkButton","getPlainContent","removeSelectors","__webpack_exports__"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/string'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['models/Post'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/ReplyComposer'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/PostPreview'];","module.exports = flarum.core.compat['components/Notification'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['components/LogInModal'];","module.exports = flarum.core.compat['components/NotificationGrid'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['helpers/punctuateSeries'];","module.exports = flarum.core.compat['helpers/icon'];","/* jshint browser: true */\n\n(function () {\n\n// We'll copy the properties below into the mirror div.\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nvar properties = [\n  'direction',  // RTL support\n  'boxSizing',\n  'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height',\n  'overflowX',\n  'overflowY',  // copy the scrollbar for IE\n\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderStyle',\n\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'fontStretch',\n  'fontSize',\n  'fontSizeAdjust',\n  'lineHeight',\n  'fontFamily',\n\n  'textAlign',\n  'textTransform',\n  'textIndent',\n  'textDecoration',  // might not make a difference, but better be safe\n\n  'letterSpacing',\n  'wordSpacing',\n\n  'tabSize',\n  'MozTabSize'\n\n];\n\nvar isBrowser = (typeof window !== 'undefined');\nvar isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\nfunction getCaretCoordinates(element, position, options) {\n  if (!isBrowser) {\n    throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n  }\n\n  var debug = options && options.debug || false;\n  if (debug) {\n    var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n    if (el) el.parentNode.removeChild(el);\n  }\n\n  // The mirror div will replicate the textarea's style\n  var div = document.createElement('div');\n  div.id = 'input-textarea-caret-position-mirror-div';\n  document.body.appendChild(div);\n\n  var style = div.style;\n  var computed = window.getComputedStyle ? window.getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n  var isInput = element.nodeName === 'INPUT';\n\n  // Default textarea styles\n  style.whiteSpace = 'pre-wrap';\n  if (!isInput)\n    style.wordWrap = 'break-word';  // only for textarea-s\n\n  // Position off-screen\n  style.position = 'absolute';  // required to return coordinates properly\n  if (!debug)\n    style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n  // Transfer the element's properties to the div\n  properties.forEach(function (prop) {\n    if (isInput && prop === 'lineHeight') {\n      // Special case for <input>s because text is rendered centered and line height may be != height\n      style.lineHeight = computed.height;\n    } else {\n      style[prop] = computed[prop];\n    }\n  });\n\n  if (isFirefox) {\n    // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n    if (element.scrollHeight > parseInt(computed.height))\n      style.overflowY = 'scroll';\n  } else {\n    style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n  }\n\n  div.textContent = element.value.substring(0, position);\n  // The second special handling for input type=\"text\" vs textarea:\n  // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n  if (isInput)\n    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n  var span = document.createElement('span');\n  // Wrapping must be replicated *exactly*, including when a long word gets\n  // onto the next line, with whitespace at the end of the line before (#7).\n  // The  *only* reliable way to do that is to copy the *entire* rest of the\n  // textarea's content into the <span> created at the caret position.\n  // For inputs, just '.' would be enough, but no need to bother.\n  span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n  div.appendChild(span);\n\n  var coordinates = {\n    top: span.offsetTop + parseInt(computed['borderTopWidth']),\n    left: span.offsetLeft + parseInt(computed['borderLeftWidth']),\n    height: parseInt(computed['lineHeight'])\n  };\n\n  if (debug) {\n    span.style.backgroundColor = '#aaa';\n  } else {\n    document.body.removeChild(div);\n  }\n\n  return coordinates;\n}\n\nif (typeof module != 'undefined' && typeof module.exports != 'undefined') {\n  module.exports = getCaretCoordinates;\n} else if(isBrowser) {\n  window.getCaretCoordinates = getCaretCoordinates;\n}\n\n}());\n","module.exports = flarum.core.compat['components/ComposerBody'];","module.exports = flarum.core.compat['components/TextEditor'];","module.exports = flarum.core.compat['components/TextEditorButton'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['utils/KeyboardNavigatable'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['components/PostsUserPage'];","module.exports = flarum.core.compat['components/Post'];","import DiscussionControls from 'flarum/utils/DiscussionControls';\n\nfunction insertMention(post, component, quote) {\n  const user = post.user();\n  const mention = '@' + (user ? user.username() : post.number()) + '#' + post.id() + ' ';\n\n  // If the composer is empty, then assume we're starting a new reply.\n  // In which case we don't want the user to have to confirm if they\n  // close the composer straight away.\n  if (!component.content()) {\n    component.props.originalContent = mention;\n  }\n\n  const cursorPosition = component.editor.getSelectionRange()[0];\n  const preceding = component.editor.value().slice(0, cursorPosition);\n  const precedingNewlines = preceding.length == 0 ? 0 : 3 - preceding.match(/(\\n{0,2})$/)[0].length;\n\n  component.editor.insertAtCursor(\n    Array(precedingNewlines).join('\\n') + // Insert up to two newlines, depending on preceding whitespace\n    (quote\n      ? '> ' + mention + quote.trim().replace(/\\n/g, '\\n> ') + '\\n\\n'\n      : mention)\n  );\n}\n\nexport default function reply(post, quote) {\n  const component = app.composer.component;\n  if (component && component.props.post && component.props.post.discussion() === post.discussion()) {\n    insertMention(post, component, quote);\n  } else {\n    let replyId = post.id();\n    if (post.replyTo() > 0) {\n      replyId = post.replyTo()\n    }\n    DiscussionControls.replyAction.call(post.discussion(), false, false, replyId)\n      .then(newComponent => insertMention(post, newComponent, quote));\n  }\n}\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Button from 'flarum/components/Button';\nimport extract from 'flarum/utils/extract';\n\nimport reply from '../utils/reply';\n\nexport default class PostQuoteButton extends Button {\n  view() {\n    const post = extract(this.props, 'post');\n    const content = extract(this.props, 'content');\n\n    this.props.className = 'Button PostQuoteButton';\n    this.props.icon = 'fas fa-quote-left';\n    this.props.children = app.translator.trans('flarum-mentions.forum.post.quote_button');\n    this.props.onclick = () => {\n      this.hide();\n      reply(post, content);\n    };\n    this.props.onmousedown = (e) => e.stopPropagation();\n\n    return super.view();\n  }\n\n  config(isInitialized) {\n    if (isInitialized) return;\n\n    $(document).on('mousedown', this.hide.bind(this));\n  }\n\n  show(left, top) {\n    const $this = this.$().show();\n    const parentOffset = $this.offsetParent().offset();\n\n    $this\n      .css('left', left - parentOffset.left)\n      .css('top', top - parentOffset.top);\n  }\n\n  showStart(left, top) {\n    const $this = this.$();\n\n    this.show(left, $(window).scrollTop() + top - $this.outerHeight() - 5);\n  }\n\n  showEnd(right, bottom) {\n    const $this = this.$();\n\n    this.show(right - $this.outerWidth(), $(window).scrollTop() + bottom + 5);\n  }\n\n  hide() {\n    this.$().hide();\n  }\n}\n","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport PostQuoteButton from './components/PostQuoteButton';\nimport selectedText from './utils/selectedText';\n\nexport default function addPostQuoteButton() {\n  extend(CommentPost.prototype, 'config', function(original, isInitialized) {\n    const post = this.props.post;\n\n    if (isInitialized || post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    const $postBody = this.$('.Post-body');\n\n    // Wrap the quote button in a wrapper element so that we can render\n    // button into it.\n    const $container = $('<div class=\"Post-quoteButtonContainer\"></div>');\n\n    const handler = function(e) {\n      setTimeout(() => {\n        const content = selectedText($postBody);\n        if (content) {\n          const button = new PostQuoteButton({post, content});\n          m.render($container[0], button.render());\n\n          const rects = window.getSelection().getRangeAt(0).getClientRects();\n          const firstRect = rects[0];\n\n          if (e.clientY < firstRect.bottom && e.clientX - firstRect.right < firstRect.left - e.clientX) {\n            button.showStart(firstRect.left, firstRect.top);\n          } else {\n            const lastRect = rects[rects.length - 1];\n            button.showEnd(lastRect.right, lastRect.bottom);\n          }\n        }\n      }, 1);\n    };\n\n    this.$().after($container).on('mouseup', handler);\n\n    if ('ontouchstart' in window) {\n      document.addEventListener('selectionchange', handler, false);\n    }\n  });\n}\n","export default function selectedText(body) {\n  const selection = window.getSelection();\n  if (selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    const parent = range.commonAncestorContainer;\n    if (body[0] === parent || $.contains(body[0], parent)) {\n      const clone = $(\"<div>\").append(range.cloneContents());\n\n      // Replace emoji images with their shortcode (found in alt attribute)\n      clone.find('img.emoji').replaceWith(function() {\n        return this.alt;\n      });\n\n      // Replace all other images with a Markdown image\n      clone.find('img').replaceWith(function() {\n        return '![](' + this.src + ')';\n      });\n\n      // Replace all links with a Markdown link\n      clone.find('a').replaceWith(function() {\n        return '[' + this.innerText + '](' + this.href + ')';\n      });\n\n      return clone.text();\n    }\n  }\n  return \"\";\n}\n","import Component from 'flarum/Component';\n\nexport default class AutocompleteDropdown extends Component {\n  init() {\n    this.active = false;\n    this.index = 0;\n    this.keyWasJustPressed = false;\n  }\n\n  view() {\n    return (\n      <ul className=\"Dropdown-menu MentionsDropdown\">\n        {this.props.items.map(item => <li>{item}</li>)}\n      </ul>\n    );\n  }\n\n  show(left, top) {\n    this.$().show().css({\n      left: left + 'px',\n      top: top + 'px'\n    });\n    this.active = true;\n  }\n\n  hide() {\n    this.$().hide();\n    this.active = false;\n  }\n\n  navigate(delta) {\n    this.keyWasJustPressed = true;\n    this.setIndex(this.index + delta, true);\n    clearTimeout(this.keyWasJustPressedTimeout);\n    this.keyWasJustPressedTimeout = setTimeout(() => this.keyWasJustPressed = false, 500);\n  }\n\n  complete() {\n    this.$('li').eq(this.index).find('button').click();\n  }\n\n  setIndex(index, scrollToItem) {\n    if (this.keyWasJustPressed && !scrollToItem) return;\n\n    const $dropdown = this.$();\n    const $items = $dropdown.find('li');\n    let rangedIndex = index;\n\n    if (rangedIndex < 0) {\n      rangedIndex = $items.length - 1;\n    } else if (rangedIndex >= $items.length) {\n      rangedIndex = 0;\n    }\n\n    this.index = rangedIndex;\n\n    const $item = $items.removeClass('active').eq(rangedIndex).addClass('active');\n\n    if (scrollToItem) {\n      const dropdownScroll = $dropdown.scrollTop();\n      const dropdownTop = $dropdown.offset().top;\n      const dropdownBottom = dropdownTop + $dropdown.outerHeight();\n      const itemTop = $item.offset().top;\n      const itemBottom = itemTop + $item.outerHeight();\n\n      let scrollTop;\n      if (itemTop < dropdownTop) {\n        scrollTop = dropdownScroll - dropdownTop + itemTop - parseInt($dropdown.css('padding-top'), 10);\n      } else if (itemBottom > dropdownBottom) {\n        scrollTop = dropdownScroll - dropdownBottom + itemBottom + parseInt($dropdown.css('padding-bottom'), 10);\n      }\n\n      if (typeof scrollTop !== 'undefined') {\n        $dropdown.stop(true).animate({scrollTop}, 100);\n      }\n    }\n  }\n}\n","import getCaretCoordinates from 'textarea-caret';\n\nimport { extend } from 'flarum/extend';\nimport ComposerBody from 'flarum/components/ComposerBody';\nimport TextEditor from 'flarum/components/TextEditor';\nimport TextEditorButton from 'flarum/components/TextEditorButton';\nimport avatar from 'flarum/helpers/avatar';\nimport usernameHelper from 'flarum/helpers/username';\nimport highlight from 'flarum/helpers/highlight';\nimport KeyboardNavigatable from 'flarum/utils/KeyboardNavigatable';\nimport { truncate } from 'flarum/utils/string';\n\nimport AutocompleteDropdown from './components/AutocompleteDropdown';\n\nexport default function addComposerAutocomplete() {\n  extend(ComposerBody.prototype, 'config', function(original, isInitialized) {\n    if (isInitialized) return;\n\n    const composer = this;\n    const $container = $('<div class=\"ComposerBody-mentionsDropdownContainer\"></div>');\n    const dropdown = new AutocompleteDropdown({items: []});\n    const $textarea = this.$('textarea').wrap('<div class=\"ComposerBody-mentionsWrapper\"></div>');\n    const searched = [];\n    let mentionStart;\n    let typed;\n    let searchTimeout;\n\n    const applySuggestion = function(replacement) {\n      const insert = replacement + ' ';\n\n      // When calling setValue(), mentionStart will be set back to 0 so we need to compute this beforehand\n      const index = mentionStart - 1 + insert.length;\n\n      const content = composer.content();\n      composer.editor.setValue(content.substring(0, mentionStart - 1) + insert + content.substr($textarea[0].selectionStart));\n\n      composer.editor.setSelectionRange(index, index);\n\n      dropdown.hide();\n    };\n\n    this.navigator = new KeyboardNavigatable();\n    this.navigator\n      .when(() => dropdown.active)\n      .onUp(() => dropdown.navigate(-1))\n      .onDown(() => dropdown.navigate(1))\n      .onSelect(dropdown.complete.bind(dropdown))\n      .onCancel(dropdown.hide.bind(dropdown))\n      .bindTo($textarea);\n\n    $textarea\n      .after($container)\n      .on('click keyup input', function(e) {\n        // Up, down, enter, tab, escape, left, right.\n        if ([9, 13, 27, 40, 38, 37, 39].indexOf(e.which) !== -1) return;\n\n        const cursor = this.selectionStart;\n\n        if (this.selectionEnd - cursor > 0) return;\n\n        // Search backwards from the cursor for an '@' symbol. If we find one,\n        // we will want to show the autocomplete dropdown!\n        const value = this.value;\n        mentionStart = 0;\n        for (let i = cursor - 1; i >= cursor - 30; i--) {\n          const character = value.substr(i, 1);\n          if (character === '@') {\n            mentionStart = i + 1;\n            break;\n          }\n        }\n\n        dropdown.hide();\n        dropdown.active = false;\n\n        if (mentionStart) {\n          typed = value.substring(mentionStart, cursor).toLowerCase();\n\n          const makeSuggestion = function(user, replacement, content, className = '') {\n            const username = usernameHelper(user);\n            if (typed) {\n              username.children[0] = highlight(username.children[0], typed);\n            }\n\n            return (\n              <button className={'PostPreview ' + className}\n                onclick={() => applySuggestion(replacement)}\n                onmouseenter={function() {\n                  dropdown.setIndex($(this).parent().index());\n                }}>\n                <span className=\"PostPreview-content\">\n                  {avatar(user)}\n                  {username} {' '}\n                  {content}\n                </span>\n              </button>\n            );\n          };\n\n          const userMatches = function(user) {\n            const names = [\n              user.username(),\n              user.displayName()\n            ];\n\n            return names.some(value => value.toLowerCase().substr(0, typed.length) === typed);\n          };\n\n          const buildSuggestions = () => {\n            const suggestions = [];\n\n            // If the user has started to type a username, then suggest users\n            // matching that username.\n            if (typed) {\n              app.store.all('users').forEach(user => {\n                if (!userMatches(user)) return;\n\n                suggestions.push(\n                  makeSuggestion(user, '@' + user.username(), '', 'MentionsDropdown-user')\n                );\n              });\n            }\n\n            // If the user is replying to a discussion, or if they are editing a\n            // post, then we can suggest other posts in the discussion to mention.\n            // We will add the 5 most recent comments in the discussion which\n            // match any username characters that have been typed.\n            const composerPost = composer.props.post;\n            const discussion = (composerPost && composerPost.discussion()) || composer.props.discussion;\n            if (discussion) {\n              discussion.posts()\n                .filter(post => post && post.contentType() === 'comment' && (!composerPost || post.number() < composerPost.number()))\n                .sort((a, b) => b.createdAt() - a.createdAt())\n                .filter(post => {\n                  const user = post.user();\n                  return user && userMatches(user);\n                })\n                .splice(0, 5)\n                .forEach(post => {\n                  const user = post.user();\n                  suggestions.push(\n                    makeSuggestion(user, '@' + user.username() + '#' + post.id(), [\n                      app.translator.trans('flarum-mentions.forum.composer.reply_to_post_text', {number: post.number()}), ' — ',\n                      truncate(post.contentPlain(), 200)\n                    ], 'MentionsDropdown-post')\n                  );\n                });\n            }\n\n            if (suggestions.length) {\n              dropdown.props.items = suggestions;\n              m.render($container[0], dropdown.render());\n\n              dropdown.show();\n              const coordinates = getCaretCoordinates(this, mentionStart);\n              const width = dropdown.$().outerWidth();\n              const height = dropdown.$().outerHeight();\n              const parent = dropdown.$().offsetParent();\n              let left = coordinates.left;\n              let top = coordinates.top - this.scrollTop + 15;\n              if (top + height > parent.height()) {\n                top = coordinates.top - this.scrollTop - height - 15;\n              }\n              if (left + width > parent.width()) {\n                left = parent.width() - width;\n              }\n              dropdown.show(left, top);\n            } else {\n              dropdown.active = false;\n              dropdown.hide();\n            }\n          };\n\n          dropdown.active = true;\n\n          buildSuggestions();\n\n          dropdown.setIndex(0);\n          dropdown.$().scrollTop(0);\n\n          clearTimeout(searchTimeout);\n          if (typed) {\n            searchTimeout = setTimeout(function() {\n              const typedLower = typed.toLowerCase();\n              if (searched.indexOf(typedLower) === -1) {\n                app.store.find('users', {filter: {q: typed}, page: {limit: 5}}).then(() => {\n                  if (dropdown.active) buildSuggestions();\n                });\n                searched.push(typedLower);\n              }\n            }, 250);\n          }\n        }\n      });\n  });\n\n  extend(TextEditor.prototype, 'toolbarItems', function(items) {\n    items.add('mention', (\n      <TextEditorButton onclick={() => this.insertAtCursor('@')} icon=\"fas fa-at\">\n        {app.translator.trans('flarum-mentions.forum.composer.mention_tooltip')}\n      </TextEditorButton>\n    ));\n  });\n}\n","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class PostMentionedNotification extends Notification {\n  icon() {\n    return 'fas fa-reply';\n  }\n\n  href() {\n    const notification = this.props.notification;\n    const post = notification.subject();\n    const content = notification.content();\n\n    return app.route.discussion(post.discussion(), content && content.replyNumber);\n  }\n\n  content() {\n    const notification = this.props.notification;\n    const user = notification.fromUser();\n\n    return app.translator.transChoice('flarum-mentions.forum.notifications.post_mentioned_text', 1, {user});\n  }\n\n  excerpt() {\n    return truncate(this.props.notification.subject().contentPlain(), 200);\n  }\n}\n","import Notification from 'flarum/components/Notification';\nimport { truncate } from 'flarum/utils/string';\n\nexport default class UserMentionedNotification extends Notification {\n  icon() {\n    return 'fas fa-at';\n  }\n\n  href() {\n    const post = this.props.notification.subject();\n\n    return app.route.discussion(post.discussion(), post.number());\n  }\n\n  content() {\n    const user = this.props.notification.fromUser();\n\n    return app.translator.trans('flarum-mentions.forum.notifications.user_mentioned_text', {user});\n  }\n\n  excerpt() {\n    return truncate(this.props.notification.subject().contentPlain(), 200);\n  }\n}\n","import PostsUserPage from 'flarum/components/PostsUserPage';\n\n/**\n * The `MentionsUserPage` component shows post which user Mentioned at\n */\nexport default class MentionsUserPage extends PostsUserPage {\n  /**\n   * Load a new page of the user's activity feed.\n   *\n   * @param {Integer} [offset] The position to start getting results from.\n   * @return {Promise}\n   * @protected\n   */\n  loadResults(offset) {\n    return app.store.find('posts', {\n      filter: {\n        type: 'comment',\n        mentioned: this.user.id()\n      },\n      page: {offset, limit: this.loadLimit},\n      sort: '-createdAt'\n    });\n  }\n}\n","import username from 'flarum/helpers/username';\nimport extractText from 'flarum/utils/extractText';\n\nexport function filterUserMentions(tag) {\n  const user = app.store.getBy('users', 'username', tag.getAttribute('username'));\n\n  if (user) {\n    tag.setAttribute('id', user.id());\n    tag.setAttribute('displayname', extractText(username(user)));\n\n    return true;\n  }\n}\n\nexport function filterPostMentions(tag) {\n  const post = app.store.getById('posts', tag.getAttribute('id'));\n\n  if (post) {\n    tag.setAttribute('discussionid', post.discussion().id());\n    tag.setAttribute('number', post.number());\n    tag.setAttribute('displayname', extractText(username(post.user())));\n\n    return true;\n  }\n}\n","import app from 'flarum/app';\r\nimport {extend, override} from 'flarum/extend';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport Alert from 'flarum/components/Alert';\r\nimport Button from 'flarum/components/Button';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\n\r\nimport Post from 'flarum/models/Post';\r\nimport Model from 'flarum/Model';\r\nimport ReplyComposer from \"flarum/components/ReplyComposer\";\r\nimport LogInModal from \"flarum/components/LogInModal\";\r\n\r\nimport NotificationGrid from 'flarum/components/NotificationGrid';\r\nimport { getPlainContent } from 'flarum/utils/string';\r\n\r\nimport addPostMentionPreviews from './addPostMentionPreviews';\r\nimport addMentionedByList from './addMentionedByList';\r\nimport addPostReplyAction from './addPostReplyAction';\r\nimport addPostQuoteButton from './addPostQuoteButton';\r\nimport addComposerAutocomplete from './addComposerAutocomplete';\r\nimport PostMentionedNotification from './components/PostMentionedNotification';\r\nimport UserMentionedNotification from './components/UserMentionedNotification';\r\nimport UserPage from 'flarum/components/UserPage'\r\nimport LinkButton from 'flarum/components/LinkButton';\r\nimport MentionsUserPage from './components/MentionsUserPage';\r\n\r\nimport MakeTree from './MakeTree';\r\n\r\napp.initializers.add('kyrne-everygreen', () => {\r\n  Post.prototype.replyTo = Model.attribute('replyTo');\r\n  Post.prototype.replyCount = Model.attribute('replyCount');\r\n\r\n  DiscussionControls.replyAction = function (goToLast, forceRefresh, replyTo) {\r\n    const deferred = m.deferred();\r\n\r\n    if (app.session.user) {\r\n      if (this.canReply()) {\r\n        let component = app.composer.component;\r\n        if (!app.composingReplyTo(this) || forceRefresh) {\r\n          component = new ReplyComposer({\r\n            user: app.session.user,\r\n            discussion: this,\r\n            replyTo\r\n          });\r\n          app.composer.load(component);\r\n        }\r\n        app.composer.show();\r\n\r\n        if (goToLast && app.viewingDiscussion(this) && !app.composer.isFullScreen()) {\r\n          app.current.stream.goToNumber('reply');\r\n        }\r\n\r\n        deferred.resolve(component);\r\n      } else {\r\n        deferred.reject();\r\n      }\r\n    } else {\r\n      deferred.reject();\r\n\r\n      app.modal.show(new LogInModal());\r\n    }\r\n\r\n    return deferred.promise;\r\n  };\r\n\r\n  extend(ReplyComposer.prototype, 'init', function() {\r\n    this.replyTo = this.props.replyTo;\r\n  });\r\n\r\n  extend(ReplyComposer.prototype, 'data', function(data) {\r\n    data.replyTo = this.replyTo\r\n  });\r\n\r\n  override(ReplyComposer.prototype, 'onsubmit', function() {\r\n    const discussion = this.props.discussion;\r\n\r\n    this.loading = true;\r\n    m.redraw();\r\n\r\n    const data = this.data();\r\n\r\n    app.store\r\n      .createRecord('posts')\r\n      .save(data)\r\n      .then((post) => {\r\n        // If we're currently viewing the discussion which this reply was made\r\n        // in, then we can update the post stream and scroll to the post.\r\n        if (app.viewingDiscussion(discussion)) {\r\n          if (this.props.replyTo) {\r\n            app.cache.trees[this.props.replyTo].push(post);\r\n            app.cache.pushTree[this.props.replyTo]++;\r\n            m.redraw();\r\n          } else {\r\n            app.current.stream.update().then(() => app.current.stream.goToNumber(post.number()));\r\n          }\r\n        } else {\r\n          // Otherwise, we'll create an alert message to inform the user that\r\n          // their reply has been posted, containing a button which will\r\n          // transition to their new post when clicked.\r\n          let alert;\r\n          const viewButton = Button.component({\r\n            className: 'Button Button--link',\r\n            children: app.translator.trans('core.forum.composer_reply.view_button'),\r\n            onclick: () => {\r\n              m.route(app.route.post(post));\r\n              app.alerts.dismiss(alert);\r\n            },\r\n          });\r\n          app.alerts.show(\r\n            (alert = new Alert({\r\n              type: 'success',\r\n              children: app.translator.trans('core.forum.composer_reply.posted_message'),\r\n              controls: [viewButton],\r\n            }))\r\n          );\r\n        }\r\n\r\n        app.composer.hide();\r\n      }, this.loaded.bind(this));\r\n  });\r\n\r\n  // For every mention of a post inside a post's content, set up a hover handler\r\n  // that shows a preview of the mentioned post.\r\n  addPostMentionPreviews();\r\n\r\n  // In the footer of each post, show information about who has replied (i.e.\r\n  // who the post has been mentioned by).\r\n  addMentionedByList();\r\n\r\n  // Add a 'reply' control to the footer of each post. When clicked, it will\r\n  // open up the composer and add a post mention to its contents.\r\n  addPostReplyAction();\r\n\r\n  // Show a Quote button when Post text is selected\r\n  addPostQuoteButton();\r\n\r\n  // After typing '@' in the composer, show a dropdown suggesting a bunch of\r\n  // posts or users that the user could mention.\r\n  addComposerAutocomplete();\r\n\r\n  MakeTree();\r\n\r\n  app.notificationComponents.postMentioned = PostMentionedNotification;\r\n  app.notificationComponents.userMentioned = UserMentionedNotification;\r\n\r\n  // Add notification preferences.\r\n  extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\r\n    items.add('postMentioned', {\r\n      name: 'postMentioned',\r\n      icon: 'fas fa-reply',\r\n      label: app.translator.trans('flarum-mentions.forum.settings.notify_post_mentioned_label')\r\n    });\r\n\r\n    items.add('userMentioned', {\r\n      name: 'userMentioned',\r\n      icon: 'fas fa-at',\r\n      label: app.translator.trans('flarum-mentions.forum.settings.notify_user_mentioned_label')\r\n    });\r\n  });\r\n\r\n  // Add mentions tab in user profile\r\n  app.routes['user.mentions'] = {path: '/u/:username/mentions', component: MentionsUserPage.component()};\r\n  extend(UserPage.prototype, 'navItems', function (items) {\r\n    const user = this.user;\r\n    items.add('mentions',\r\n      LinkButton.component({\r\n        href: app.route('user.mentions', {username: user.username()}),\r\n        name: 'mentions',\r\n        children: [app.translator.trans('flarum-mentions.forum.user.mentions_link')],\r\n        icon: 'fas fa-at'\r\n      }),\r\n      80\r\n    );\r\n  });\r\n\r\n  // Remove post mentions when rendering post previews.\r\n  getPlainContent.removeSelectors.push('a.PostMention');\r\n});\r\n\r\nexport * from './utils/textFormatter';\r\n","import { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport PostPreview from 'flarum/components/PostPreview';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\n\nexport default function addPostMentionPreviews() {\n  extend(CommentPost.prototype, 'config', function() {\n    const contentHtml = this.props.post.contentHtml();\n\n    if (contentHtml === this.oldPostContentHtml || this.isEditing()) return;\n\n    this.oldPostContentHtml = contentHtml;\n\n    const parentPost = this.props.post;\n    const $parentPost = this.$();\n\n    this.$('.UserMention, .PostMention').each(function() {\n      m.route.call(this, this, false, {}, {attrs: {href: this.getAttribute('href')}});\n    });\n\n    this.$('.PostMention').each(function() {\n      const $this = $(this);\n      const id = $this.data('id');\n      let timeout;\n\n      // Wrap the mention link in a wrapper element so that we can insert a\n      // preview popup as its sibling and relatively position it.\n      const $preview = $('<ul class=\"Dropdown-menu PostMention-preview fade\"/>');\n      $parentPost.append($preview);\n\n      const getPostElement = () => {\n        return $(`.PostStream-item[data-id=\"${id}\"]`);\n      };\n\n      const showPreview = () => {\n        // When the user hovers their mouse over the mention, look for the\n        // post that it's referring to in the stream, and determine if it's\n        // in the viewport. If it is, we will \"pulsate\" it.\n        const $post = getPostElement();\n        let visible = false;\n        if ($post.length) {\n          const top = $post.offset().top;\n          const scrollTop = window.pageYOffset;\n          if (top > scrollTop && top + $post.height() < scrollTop + $(window).height()) {\n            $post.addClass('pulsate');\n            visible = true;\n          }\n        }\n\n        // Otherwise, we will show a popup preview of the post. If the post\n        // hasn't yet been loaded, we will need to do that.\n        if (!visible) {\n          // Position the preview so that it appears above the mention.\n          // (The offsetParent should be .Post-body.)\n          const positionPreview = () => {\n            const previewHeight = $preview.outerHeight(true);\n            let offset = 0;\n\n            // If the preview goes off the top of the viewport, reposition it to\n            // be below the mention.\n            if ($this.offset().top - previewHeight < $(window).scrollTop() + $('#header').outerHeight()) {\n              offset += $this.outerHeight(true);\n            } else {\n              offset -= previewHeight;\n            }\n\n            $preview.show()\n              .css('top', $this.offset().top - $parentPost.offset().top + offset)\n              .css('left', $this.offsetParent().offset().left - $parentPost.offset().left)\n              .css('max-width', $this.offsetParent().width());\n          };\n\n          const showPost = post => {\n            const discussion = post.discussion();\n\n            m.render($preview[0], [\n              discussion !== parentPost.discussion()\n                ? <li><span className=\"PostMention-preview-discussion\">{discussion.title()}</span></li>\n                : '',\n              <li>{PostPreview.component({post})}</li>\n            ]);\n            positionPreview();\n          };\n\n          const post = app.store.getById('posts', id);\n          if (post && post.discussion()) {\n            showPost(post);\n          } else {\n            m.render($preview[0], LoadingIndicator.component());\n            app.store.find('posts', id).then(showPost);\n            positionPreview();\n          }\n\n          setTimeout(() => $preview.off('transitionend').addClass('in'));\n        }\n      };\n\n      const hidePreview = () => {\n        getPostElement().removeClass('pulsate');\n        if ($preview.hasClass('in')) {\n          $preview.removeClass('in').one('transitionend', () => $preview.hide());\n        }\n      };\n\n      $this.on('touchstart', e => e.preventDefault());\n\n      $this.add($preview).hover(\n        () => {\n          clearTimeout(timeout);\n          timeout = setTimeout(showPreview, 250);\n        },\n        () => {\n          clearTimeout(timeout);\n          getPostElement().removeClass('pulsate');\n          timeout = setTimeout(hidePreview, 250);\n        }\n      )\n        .on('touchend', e => {\n          showPreview();\n          e.stopPropagation();\n        });\n\n      $(document).on('touchend', hidePreview);\n    });\n  });\n}\n","import { extend } from 'flarum/extend';\nimport Model from 'flarum/Model';\nimport Post from 'flarum/models/Post';\nimport CommentPost from 'flarum/components/CommentPost';\nimport PostPreview from 'flarum/components/PostPreview';\nimport punctuateSeries from 'flarum/helpers/punctuateSeries';\nimport username from 'flarum/helpers/username';\nimport icon from 'flarum/helpers/icon';\n\nexport default function addMentionedByList() {\n  Post.prototype.mentionedBy = Model.hasMany('mentionedBy');\n\n  extend(CommentPost.prototype, 'footerItems', function(items) {\n    const post = this.props.post;\n    const replies = post.mentionedBy();\n\n    if (replies && replies.length) {\n      // If there is only one reply, and it's adjacent to this post, we don't\n      // really need to show the list.\n      if (replies.length === 1 && replies[0].number() === post.number() + 1) {\n        return;\n      }\n\n      const hidePreview = () => {\n        this.$('.Post-mentionedBy-preview')\n          .removeClass('in')\n          .one('transitionend', function() { $(this).hide(); });\n      };\n\n      const config = function(element, isInitialized) {\n        if (isInitialized) return;\n\n        const $this = $(element);\n        let timeout;\n\n        const $preview = $('<ul class=\"Dropdown-menu Post-mentionedBy-preview fade\"/>');\n        $this.append($preview);\n\n        $this.children().hover(function() {\n          clearTimeout(timeout);\n          timeout = setTimeout(function() {\n            if (!$preview.hasClass('in') && $preview.is(':visible')) return;\n\n            // When the user hovers their mouse over the list of people who have\n            // replied to the post, render a list of reply previews into a\n            // popup.\n            m.render($preview[0], replies.map(reply => (\n              <li data-number={reply.number()}>\n                {PostPreview.component({\n                  post: reply,\n                  onclick: hidePreview\n                })}\n              </li>\n            )));\n            $preview.show();\n            setTimeout(() => $preview.off('transitionend').addClass('in'));\n          }, 500);\n        }, function() {\n          clearTimeout(timeout);\n          timeout = setTimeout(hidePreview, 250);\n        });\n\n        // Whenever the user hovers their mouse over a particular name in the\n        // list of repliers, highlight the corresponding post in the preview\n        // popup.\n        $this.find('.Post-mentionedBy-summary a').hover(function() {\n          $preview.find('[data-number=\"' + $(this).data('number') + '\"]').addClass('active');\n        }, function() {\n          $preview.find('[data-number]').removeClass('active');\n        });\n      };\n\n      const users = [];\n      const repliers = replies\n        .sort(reply => reply.user() === app.session.user ? -1 : 0)\n        .filter(reply => {\n          const user = reply.user();\n          if (users.indexOf(user) === -1) {\n            users.push(user);\n            return true;\n          }\n        });\n\n      const limit = 4;\n      const overLimit = repliers.length > limit;\n\n      // Create a list of unique users who have replied. So even if a user has\n      // replied twice, they will only be in this array once.\n      const names = repliers\n        .slice(0, overLimit ? limit - 1 : limit)\n        .map(reply => {\n          const user = reply.user();\n\n          return (\n            <a href={app.route.post(reply)}\n               config={m.route}\n               onclick={hidePreview}\n               data-number={reply.number()}>\n              {app.session.user === user ? app.translator.trans('flarum-mentions.forum.post.you_text') : username(user)}\n            </a>\n          );\n        });\n\n      // If there are more users that we've run out of room to display, add a \"x\n      // others\" name to the end of the list. Clicking on it will display a modal\n      // with a full list of names.\n      if (overLimit) {\n        const count = repliers.length - names.length;\n\n        names.push(\n          app.translator.transChoice('flarum-mentions.forum.post.others_text', count, {count})\n        );\n      }\n\n      items.add('replies',\n        <div className=\"Post-mentionedBy\" config={config}>\n          <span className=\"Post-mentionedBy-summary\">\n            {icon('fas fa-reply')}\n            {app.translator.transChoice('flarum-mentions.forum.post.mentioned_by' + (repliers[0].user() === app.session.user ? '_self' : '') + '_text', names.length, {\n              count: names.length,\n              users: punctuateSeries(names)\n            })}\n          </span>\n        </div>\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/extend';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\n\nimport reply from './utils/reply';\n\nexport default function () {\n  extend(CommentPost.prototype, 'actionItems', function (items) {\n\n    const post = this.props.post;\n\n    if (post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    items.add('reply',\n      Button.component({\n        className: 'Button Button--link',\n        children: app.translator.trans('flarum-mentions.forum.post.reply_link'),\n        onclick: () => reply(post)\n      })\n    );\n  });\n}\n","import {extend} from 'flarum/extend';\r\nimport Post from 'flarum/components/Post';\r\nimport Button from 'flarum/components/Button';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\n\r\nexport default function MakeTree() {\r\n  extend(Post.prototype, 'view', function (vdom) {\r\n    const id = this.props.post.id();\r\n    if (!app.cache.trees) {\r\n      app.cache.trees = {};\r\n      app.cache.pushTree = {};\r\n    }\r\n    if (!app.cache.trees[id]) {\r\n      app.cache.trees[id] = [];\r\n      app.cache.pushTree[id] = 0;\r\n    }\r\n\r\n    if (app.cache.trees[id]) {\r\n      vdom.children.push(\r\n        <div className='CommentTree' id={id}>\r\n          {app.cache.trees[id].filter((thing, index, self) => self.findIndex(t => t.id() === thing.id()) === index)\r\n            .sort((a, b) => {\r\n              return a.createdAt() - b.createdAt();\r\n            }).map(post => {\r\n              return CommentPost.component({post});\r\n            })}\r\n        </div>\r\n      )\r\n    }\r\n    if (this.props.post.replyCount() > app.cache.trees[id].length - app.cache.pushTree[id] || (app.cache.trees[id].length === 0 && this.props.post.replyCount())) {\r\n      const count = this.props.post.replyCount() - app.cache.trees[id].length + app.cache.pushTree[id];\r\n      vdom.children.push(\r\n        Button.component({\r\n          className: 'Button Button--link Evergreen--show',\r\n          icon: 'fas fa-caret-down',\r\n          children: app.translator.trans('kyrne-evergreen.forum.post.show_' + (count > 1 ? 'replies' : 'reply'), {count}),\r\n          onclick: () => {\r\n            app.store.find('trees', id)\r\n              .then(response => {\r\n                delete response.payload;\r\n                [].push.apply(app.cache.trees[id], response);\r\n                m.redraw();\r\n              })\r\n          }\r\n        })\r\n      );\r\n    }\r\n  })\r\n}\r\n\r\n","export * from './src/forum';\r\n"],"sourceRoot":""}